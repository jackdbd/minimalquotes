rules_version = '2';
service cloud.firestore {

  function isSignedIn() {
    return request.auth != null;
  }

  match /databases/{database}/documents {
    function isAdmin(req) {
      // return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
      return 'ADMIN' in req.auth.token.roles;
    }

    match /quotes/{quoteId} {
      allow read: if true;
      allow update: if isSignedIn() && resource.data.createdBy == request.auth.uid;
      allow create, delete: if isSignedIn() && isAdmin(request);
    }

    match /tags/{tagId} {
      allow read: if true;
      allow create, update, delete: if isSignedIn() && isAdmin(request);
    }

    match /users/{userId} {
      allow create: if isSignedIn();
      allow read, update: if isSignedIn() && (request.auth.uid == userId || isAdmin(request));
      allow delete: if isSignedIn() && isAdmin(request);
    }
  }
}
